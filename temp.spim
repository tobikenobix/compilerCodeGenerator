	 .data
_true: .asciiz "true"
_false: .asciiz "false"
_.newline: .asciiz "\n"
.text
.globl dummy
		# FUNCTION ENTRY dummy
dummy:
	sw    $ra, 0($sp)		#PUSH
	subu  $sp, $sp, 4
	sw    $fp, 0($sp)		#PUSH
	subu  $sp, $sp, 4
#	addu  $fp, $sp, 8
	subu  $sp, $sp, 24
		#  STATEMENTS
	li    $a0, 2		#load int val
	sw    $a0, 4($fp)		#store value of local varx
	li    $a0, 10		#load int val
	sw    $a0, 12($fp)		#store value of local varz
	li    $a0, 16		#load int val
	sw    $a0, 8($fp)		#store value of local vary
.data
._L1:  .asciiz "hi"		#String Literal
.text
	la    $a0, ._L1
	sw    $a0, 16($fp)		#store value of local varhello
	lw    $a0, 16($fp)		#load local variable hello
	li    $v0, 4
	syscall
	la    $a0, _.newline
	li    $v0, 4
	syscall
._L0:		# FUNCTION EXIT
	lw    $ra, 0($fp)		#restore ra
	move  $sp, $fp		#restore SP
	lw    $fp, -4($fp)		#restore FP
	jr    $ra		#return to caller
.text
.globl main
		# FUNCTION ENTRY main
main:
	sw    $ra, 0($sp)		#PUSH
	subu  $sp, $sp, 4
	sw    $fp, 0($sp)		#PUSH
	subu  $sp, $sp, 4
	addu  $fp, $sp, 8
	subu  $sp, $sp, 8
		#  STATEMENTS
	jal   dummy		#call method
._L2:		# FUNCTION EXIT
	lw    $ra, 0($fp)		#restore ra
	move  $sp, $fp		#restore SP
	lw    $fp, -4($fp)		#restore FP
	jr    $ra		#return to caller
