	 .data
_true: .asciiz "true"
_false: .asciiz "false"
_.newline: .asciiz "\n"
.data
yeaha:  .word 0		#global static variable
.text
.globl yeaha		#global var
.data
abc:  .word 0		#global static variable
.text
.globl abc		#global var
.data
bestIntInTheWorld:  .word 0		#global static variable
.text
.globl bestIntInTheWorld		#global var
.globl main
		# FUNCTION ENTRY main
main:
	sw    $ra, 0($sp)		#PUSH
	subu  $sp, $sp, 4
	sw    $fp, 0($sp)		#PUSH
	subu  $sp, $sp, 4
	addu  $fp, $sp, 8
		#  STATEMENTS
.data
._L0:  .asciiz "Hello world"		#String Literal
.text
	la    $a0, ._L0
	li    $v0, 4
	syscall
	la    $a0, _.newline
	li    $v0, 4
	syscall
.data
._L1:  .asciiz "hello again"		#String Literal
.text
	la    $a0, ._L1
	sw    $a0, yeaha		#store value of yeaha
.data
._L2:  .asciiz "abc"		#String Literal
.text
	la    $a0, ._L2
	sw    $a0, abc		#store value of abc
	lw    $a0, yeaha		#load variable yeaha
	li    $v0, 4
	syscall
	la    $a0, _.newline
	li    $v0, 4
	syscall
.data
._L3:  .word 3		#Integer Literal
.text
	lw    $a0, ._L3
	sw    $a0, 0($sp)		#PUSH
	subu  $sp, $sp, 4
.data
._L4:  .word 3		#Integer Literal
.text
	lw    $a0, ._L4
	lw    $t1, 4($sp)
	add   $a0, $t1, $a0
	addiu $sp, $sp, 4		#POP
	sw    $a0, bestIntInTheWorld		#store value of bestIntInTheWorld
.data
._L5:  .word 6		#Integer Literal
.text
	lw    $a0, ._L5
	sw    $a0, 0($sp)		#PUSH
	subu  $sp, $sp, 4
.data
._L6:  .word 3		#Integer Literal
.text
	lw    $a0, ._L6
	sw    $a0, 0($sp)		#PUSH
	subu  $sp, $sp, 4
.data
._L7:  .word 3		#Integer Literal
.text
	lw    $a0, ._L7
	lw    $t1, 4($sp)
	add   $a0, $t1, $a0
	addiu $sp, $sp, 4		#POP
	lw    $t1, 4($sp)
	sub   $a0, $t1, $a0		#subtract
	addiu $sp, $sp, 4		#POP
	sw    $a0, bestIntInTheWorld		#store value of bestIntInTheWorld
	lw    $a0, bestIntInTheWorld		#load variable bestIntInTheWorld
	li    $v0, 1
	syscall
	la    $a0, _.newline
	li    $v0, 4
	syscall
.main_Exit:		# FUNCTION EXIT
	lw    $ra, 0($fp)		#restore ra
	move  $sp, $fp		#restore SP
	lw    $fp, -4($fp)		#restore FP
	jr    $ra		#return to caller
